{
  "name": "s",
  "canonicalReference": "@hashbrownai/core!s:namespace",
  "kind": "Namespace",
  "fileUrlPath": "../packages/core/src/schema/index.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Namespace",
      "canonicalReference": "@hashbrownai/core!s:namespace",
      "docComment": "",
      "excerptTokens": [],
      "fileUrlPath": "../packages/core/src/schema/index.ts",
      "releaseTag": "None",
      "name": "s",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.anyOf:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function anyOf<const Options extends "
            },
            { "kind": "Content", "text": "readonly " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[]" },
            { "kind": "Content", "text": ">(options: " },
            { "kind": "Content", "text": "Options" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "AnyOfType",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            },
            { "kind": "Content", "text": "<Options>" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": { "startIndex": 5, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Options",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 4 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "name": "anyOf",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function anyOf<\n  const Options extends readonly  HashbrownType [],\n>(options: Options):  AnyOfType <Options>;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function anyOf<\n  const Options extends readonly "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[],\n>(options: Options): " },
            {
              "kind": "Reference",
              "text": " AnyOfType",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            },
            { "kind": "Content", "text": " <Options>;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AnyOfType<Options extends "
            },
            { "kind": "Content", "text": "readonly " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[]" },
            { "kind": "Content", "text": " = " },
            { "kind": "Content", "text": "readonly " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[]" },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<Options[number][" },
            {
              "kind": "Reference",
              "text": "internal",
              "canonicalReference": "@hashbrownai/core!~internal:type"
            },
            { "kind": "Content", "text": "]['result']>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Options",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 4 },
              "defaultTypeTokenRange": { "startIndex": 5, "endIndex": 8 }
            }
          ],
          "name": "AnyOfType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "AnyOfTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~AnyOfTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Options>" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: AnyOfTypeInternals<Options>;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "AnyOfTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~AnyOfTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Options>;" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 9, "endIndex": 13 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface AnyOfType<Options extends readonly HashbrownType[] = readonly HashbrownType[]> extends HashbrownType<Options[number][internal]['result']>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface AnyOfType<Options extends readonly "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[] = readonly " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "[]> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<Options[number][" },
            {
              "kind": "Reference",
              "text": "internal",
              "canonicalReference": "@hashbrownai/core!~internal:type"
            },
            { "kind": "Content", "text": "]['result']>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.AnyOfType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "AnyOfType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "AnyOfType",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "AnyOfType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "AnyOfType:  HashbrownTypeCtor < AnyOfType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "AnyOfType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " AnyOfType ",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.array:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function array<Item extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ">(description: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ", item: " },
            { "kind": "Content", "text": "Item" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": "<Item>" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": false
            },
            {
              "parameterName": "item",
              "parameterTypeTokenRange": { "startIndex": 5, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Item",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "name": "array",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function array<\n  Item extends  HashbrownType ,\n>(description: string, item: Item):  ArrayType <Item>;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function array<\n  Item extends "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            {
              "kind": "Content",
              "text": ",\n>(description: string, item: Item): "
            },
            {
              "kind": "Reference",
              "text": " ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": " <Item>;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.ArrayType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ArrayType<Item extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Item",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 3, "endIndex": 4 }
            }
          ],
          "name": "ArrayType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.ArrayType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "ArrayTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~ArrayTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Item>" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: ArrayTypeInternals<Item>;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "ArrayTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~ArrayTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Item>;" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 5, "endIndex": 6 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface ArrayType<Item extends HashbrownType = HashbrownType> extends HashbrownType",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface ArrayType<Item extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.ArrayType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "ArrayType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ArrayType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "ArrayType:  HashbrownTypeCtor < ArrayType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "ArrayType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " ArrayType ",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.boolean:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function boolean(description: "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "BooleanType",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "boolean",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function boolean(\n  description: string,\n):  BooleanType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function boolean(\n  description: string,\n): "
            },
            {
              "kind": "Reference",
              "text": " BooleanType; ",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.BooleanType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BooleanType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<boolean>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "BooleanType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.BooleanType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "BooleanTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~BooleanTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: BooleanTypeInternals;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "BooleanTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~BooleanTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 1, "endIndex": 3 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface BooleanType extends HashbrownType<boolean>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface BooleanType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<boolean>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.BooleanType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "BooleanType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "BooleanType",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "BooleanType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "BooleanType:  HashbrownTypeCtor < BooleanType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "BooleanType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " BooleanType ",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.ConstStringType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LiteralType<T extends "
            },
            { "kind": "Content", "text": "string | number | boolean" },
            { "kind": "Content", "text": " = " },
            { "kind": "Content", "text": "string | number | boolean" },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 3, "endIndex": 4 }
            }
          ],
          "name": "ConstStringType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.ConstStringType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "LiteralTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~LiteralTypeInternals:interface"
                },
                { "kind": "Content", "text": "<T>" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: LiteralTypeInternals<T>;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "LiteralTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~LiteralTypeInternals:interface"
                },
                { "kind": "Content", "text": "<T>;" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 5, "endIndex": 7 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface LiteralType<T extends string | number | boolean = string | number | boolean> extends HashbrownType<T>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface LiteralType<T extends string | number | boolean = string | number | boolean> extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<T>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.ConstStringType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "LiteralType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ConstStringType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "LiteralType:  HashbrownTypeCtor < LiteralType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "LiteralType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " LiteralType ",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.enumeration:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function enumeration<const Entries extends "
            },
            { "kind": "Content", "text": "readonly string[]" },
            { "kind": "Content", "text": ">(description: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ", entries: " },
            { "kind": "Content", "text": "[...Entries]" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": "<Entries>" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": false
            },
            {
              "parameterName": "entries",
              "parameterTypeTokenRange": { "startIndex": 5, "endIndex": 6 },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Entries",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "name": "enumeration",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function enumeration<const Entries extends readonly string[]>(\n  description: string,\n  entries: [...Entries],\n):  EnumType <Entries>;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function enumeration<const Entries extends readonly string[]>(\n  description: string,\n  entries: [...Entries],\n): "
            },
            {
              "kind": "Reference",
              "text": " EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": " <Entries>;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.EnumType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EnumType<Entries extends "
            },
            { "kind": "Content", "text": "readonly string[]" },
            { "kind": "Content", "text": " = " },
            { "kind": "Content", "text": "readonly string[]" },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Entries",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 3, "endIndex": 4 }
            }
          ],
          "name": "EnumType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [{ "startIndex": 5, "endIndex": 6 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface EnumType<Entries extends readonly string[] = readonly string[]> extends HashbrownType",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface EnumType<Entries extends readonly string[] = readonly string[]> extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.EnumType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "EnumType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EnumType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "EnumType:  HashbrownTypeCtor < EnumType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "EnumType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " EnumType ",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.getDescription:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDescription(schema: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/get-description.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "schema",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "getDescription",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function getDescription(\n  schema:  HashbrownType ,\n): string;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDescription(\n  schema: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): string;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HashbrownType<out Result = "
            },
            { "kind": "Content", "text": "unknown" },
            { "kind": "Content", "text": "> " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Result",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 1, "endIndex": 2 }
            }
          ],
          "name": "HashbrownType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "HashbrownTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~HashbrownTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Result>" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: HashbrownTypeInternals<Result>;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "HashbrownTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~HashbrownTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Result>;" }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType#parseJsonSchema:member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "parseJsonSchema: " },
                {
                  "kind": "Content",
                  "text": "(object: unknown, path?: string[]) => any"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parseJsonSchema",
              "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "parseJsonSchema: (object: unknown, path?: string[]) => any;",
              "overlayTokens": [
                {
                  "kind": "Content",
                  "text": "parseJsonSchema: (object: unknown, path?: string[]) => any;"
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType#toJsonSchema:member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "toJsonSchema: " },
                { "kind": "Content", "text": "() => any" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toJsonSchema",
              "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "toJsonSchema: () => any;",
              "overlayTokens": [
                { "kind": "Content", "text": "toJsonSchema: () => any;" }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType#toTypeScript:member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "toTypeScript: " },
                { "kind": "Content", "text": "(pathSeen?: " },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                { "kind": "Content", "text": "<" },
                {
                  "kind": "Reference",
                  "text": "HashbrownType",
                  "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
                },
                { "kind": "Content", "text": ">) => string" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toTypeScript",
              "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 6 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "toTypeScript: (\n  pathSeen?:  Set < HashbrownType >,\n) => string;",
              "overlayTokens": [
                { "kind": "Content", "text": "toTypeScript: (\n  pathSeen?: " },
                {
                  "kind": "Reference",
                  "text": " Set",
                  "canonicalReference": "!Set:interface"
                },
                { "kind": "Content", "text": " <" },
                {
                  "kind": "Reference",
                  "text": " HashbrownType ",
                  "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
                },
                { "kind": "Content", "text": ">,\n) => string;" }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType#validateJsonSchema:member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "validateJsonSchema: " },
                { "kind": "Content", "text": "(object: unknown) => void" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "validateJsonSchema",
              "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "validateJsonSchema: (object: unknown) => void;",
              "overlayTokens": [
                {
                  "kind": "Content",
                  "text": "validateJsonSchema: (object: unknown) => void;"
                }
              ]
            }
          ],
          "extendsTokenRanges": [],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface HashbrownType<out Result = unknown>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface HashbrownType<out Result = unknown>"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "HashbrownType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HashbrownType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "HashbrownType:  HashbrownTypeCtor < HashbrownType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "HashbrownType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@hashbrownai/core!s.Infer:type",
          "docComment": "/**\n * -------------------------------------- -------------------------------------- Type Utilities -------------------------------------- --------------------------------------\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "export type Infer<T extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "> = " },
            { "kind": "Content", "text": "T[" },
            {
              "kind": "Reference",
              "text": "internal",
              "canonicalReference": "@hashbrownai/core!~internal:type"
            },
            { "kind": "Content", "text": "]['result']" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "Infer",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "typeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "-------------------------------------- -------------------------------------- Type Utilities -------------------------------------- --------------------------------------\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export type Infer<T extends  HashbrownType > =\n  T[ internal ][\"result\"];",
          "overlayTokens": [
            { "kind": "Content", "text": "export type Infer<T extends " },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "> =\n  T[" },
            {
              "kind": "Reference",
              "text": " internal ",
              "canonicalReference": "@hashbrownai/core!~internal:type"
            },
            { "kind": "Content", "text": "][\"result\"];" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.integer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function integer(description: "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "integer",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function integer(\n  description: string,\n):  IntegerType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function integer(\n  description: string,\n): "
            },
            {
              "kind": "Reference",
              "text": " IntegerType; ",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.IntegerType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IntegerType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<number>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "IntegerType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.IntegerType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "IntegerTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~IntegerTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: IntegerTypeInternals;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "IntegerTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~IntegerTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 1, "endIndex": 3 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface IntegerType extends HashbrownType<number>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface IntegerType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<number>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.IntegerType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "IntegerType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "IntegerType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "IntegerType:  HashbrownTypeCtor < IntegerType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "IntegerType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " IntegerType ",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isAnyOfType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isAnyOfType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "AnyOfType",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isAnyOfType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isAnyOfType(\n  type:  HashbrownType ,\n):  type  is  AnyOfType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isAnyOfType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " AnyOfType; ",
              "canonicalReference": "@hashbrownai/core!s.AnyOfType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isArrayType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArrayType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isArrayType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isArrayType(\n  type:  HashbrownType ,\n):  type  is  ArrayType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArrayType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " ArrayType; ",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isBooleanType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isBooleanType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "BooleanType",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isBooleanType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isBooleanType(\n  type:  HashbrownType ,\n):  type  is  BooleanType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isBooleanType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " BooleanType; ",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isEnumType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEnumType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isEnumType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isEnumType(\n  type:  HashbrownType ,\n):  type  is  EnumType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEnumType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " EnumType; ",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isHashbrownType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHashbrownType(type: "
            },
            { "kind": "Content", "text": "any" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isHashbrownType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isHashbrownType(\n  type: any,\n):  type  is  HashbrownType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHashbrownType(\n  type: any,\n): "
            },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " HashbrownType; ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isIntegerType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isIntegerType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isIntegerType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isIntegerType(\n  type:  HashbrownType ,\n):  type  is  IntegerType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isIntegerType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " IntegerType; ",
              "canonicalReference": "@hashbrownai/core!s.IntegerType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isLiteralType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isLiteralType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isLiteralType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isLiteralType(\n  type:  HashbrownType ,\n):  type  is  LiteralType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isLiteralType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " LiteralType; ",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isNullType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNullType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "NullType",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isNullType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isNullType(\n  type:  HashbrownType ,\n):  type  is  NullType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNullType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " NullType; ",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isNumberType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNumberType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "NumberType",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isNumberType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isNumberType(\n  type:  HashbrownType ,\n):  type  is  NumberType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNumberType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " NumberType; ",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isObjectType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isObjectType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isObjectType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isObjectType(\n  type:  HashbrownType ,\n):  type  is  ObjectType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isObjectType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " ObjectType; ",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.isStringType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStringType(type: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@hashbrownai/core!~type"
            },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": "StringType",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 6 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "isStringType",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function isStringType(\n  type:  HashbrownType ,\n):  type  is  StringType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStringType(\n  type: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): " },
            { "kind": "Content", "text": " type " },
            { "kind": "Content", "text": " is " },
            {
              "kind": "Reference",
              "text": " StringType; ",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.literal:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function literal<T extends "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ">(value: " },
            { "kind": "Content", "text": "T" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": "<T>" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 5, "endIndex": 7 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "name": "literal",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function literal<T extends string>(\n  value: T,\n):  LiteralType <T>;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function literal<T extends string>(\n  value: T,\n): "
            },
            {
              "kind": "Reference",
              "text": " LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": " <T>;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.nullish:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function nullish(): "
            },
            {
              "kind": "Reference",
              "text": "NullType",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "nullish",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function nullish():  NullType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function nullish(): "
            },
            {
              "kind": "Reference",
              "text": " NullType; ",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.NullType:interface",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "export interface NullType extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<null>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "NullType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.NullType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "NullTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~NullTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: NullTypeInternals;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "NullTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~NullTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 1, "endIndex": 3 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface NullType extends HashbrownType<null>",
          "overlayTokens": [
            { "kind": "Content", "text": "export interface NullType extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<null>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.NullType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "NullType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "NullType",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "NullType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "NullType:  HashbrownTypeCtor < NullType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "NullType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " NullType ",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.number:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function number(description: "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "NumberType",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "number",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function number(\n  description: string,\n):  NumberType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function number(\n  description: string,\n): "
            },
            {
              "kind": "Reference",
              "text": " NumberType; ",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.NumberType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NumberType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<number>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "NumberType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.NumberType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "NumberTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~NumberTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: NumberTypeInternals;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "NumberTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~NumberTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 1, "endIndex": 3 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface NumberType extends HashbrownType<number>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface NumberType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<number>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.NumberType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "NumberType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "NumberType",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "NumberType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "NumberType:  HashbrownTypeCtor < NumberType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "NumberType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " NumberType ",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.object:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function object<Shape extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            { "kind": "Content", "text": "<string, any>" },
            { "kind": "Content", "text": ">(description: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ", shape: " },
            { "kind": "Content", "text": "Shape" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "CleanInterfaceShape",
              "canonicalReference": "@hashbrownai/core!ɵtypes.CleanInterfaceShape:type"
            },
            { "kind": "Content", "text": "<Shape>>" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 8, "endIndex": 12 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 5 },
              "isOptional": false
            },
            {
              "parameterName": "shape",
              "parameterTypeTokenRange": { "startIndex": 6, "endIndex": 7 },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Shape",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "name": "object",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function object<\n  Shape extends  Record <string, any>,\n>(\n  description: string,\n  shape: Shape,\n):  ObjectType <\n   CleanInterfaceShape <Shape>\n>;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function object<\n  Shape extends "
            },
            {
              "kind": "Reference",
              "text": " Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": " <string, any>,\n>(\n  description: string,\n  shape: Shape,\n): "
            },
            {
              "kind": "Reference",
              "text": " ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": " <\n  " },
            {
              "kind": "Reference",
              "text": " CleanInterfaceShape",
              "canonicalReference": "@hashbrownai/core!ɵtypes.CleanInterfaceShape:type"
            },
            { "kind": "Content", "text": " <Shape>\n>;" }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.ObjectType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ObjectType<Result extends "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            { "kind": "Content", "text": "<string, any>>" },
            { "kind": "Content", "text": " = " },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            { "kind": "Content", "text": "<string, any>>" },
            { "kind": "Content", "text": "> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Result",
              "constraintTokenRange": { "startIndex": 1, "endIndex": 5 },
              "defaultTypeTokenRange": { "startIndex": 6, "endIndex": 10 }
            }
          ],
          "name": "ObjectType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.ObjectType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "ObjectTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~ObjectTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Result>" },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 5 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: ObjectTypeInternals<Result>;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "ObjectTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~ObjectTypeInternals:interface"
                },
                { "kind": "Content", "text": "<Result>;" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 11, "endIndex": 12 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface ObjectType<Result extends Readonly<Record<string, any>> = Readonly<Record<string, any>>> extends HashbrownType",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface ObjectType<Result extends "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            { "kind": "Content", "text": "<string, any>> = " },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            { "kind": "Content", "text": "<string, any>>> extends " },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.ObjectType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "ObjectType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ObjectType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "ObjectType:  HashbrownTypeCtor < ObjectType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "ObjectType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " ObjectType ",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@hashbrownai/core!s.Schema:type",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "export type Schema<T> = " },
            {
              "kind": "Reference",
              "text": "IsStringUnion",
              "canonicalReference": "@hashbrownai/core!ɵtypes.IsStringUnion:type"
            },
            {
              "kind": "Content",
              "text": "<T> extends true ? [T] extends [string] ? "
            },
            {
              "kind": "Reference",
              "text": "UnionToTuple",
              "canonicalReference": "@hashbrownai/core!ɵtypes.UnionToTuple:type"
            },
            {
              "kind": "Content",
              "text": "<T> extends infer U ? U extends string[] ? "
            },
            {
              "kind": "Reference",
              "text": "EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            { "kind": "Content", "text": "<U> : never : never : never : " },
            {
              "kind": "Reference",
              "text": "IsUnion",
              "canonicalReference": "@hashbrownai/core!ɵtypes.IsUnion:type"
            },
            { "kind": "Content", "text": "<T> extends true ? " },
            {
              "kind": "Reference",
              "text": "SchemaForUnion",
              "canonicalReference": "@hashbrownai/core!~SchemaForUnion:type"
            },
            { "kind": "Content", "text": "<T> : T extends " },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            { "kind": "Content", "text": "<infer U> ? " },
            {
              "kind": "Reference",
              "text": "ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Schema",
              "canonicalReference": "@hashbrownai/core!s.Schema:type"
            },
            {
              "kind": "Content",
              "text": "<U>> : T extends string ? string extends T ? "
            },
            {
              "kind": "Reference",
              "text": "StringType",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": " : " },
            {
              "kind": "Reference",
              "text": "LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            { "kind": "Content", "text": "<T> : T extends number ? " },
            {
              "kind": "Reference",
              "text": "NumberType",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            { "kind": "Content", "text": " : T extends boolean ? " },
            {
              "kind": "Reference",
              "text": "BooleanType",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            { "kind": "Content", "text": " : T extends null ? " },
            {
              "kind": "Reference",
              "text": "NullType",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            { "kind": "Content", "text": " : T extends object ? " },
            {
              "kind": "Reference",
              "text": "ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            { "kind": "Content", "text": "<{\n    [K in keyof T]: " },
            {
              "kind": "Reference",
              "text": "Schema",
              "canonicalReference": "@hashbrownai/core!s.Schema:type"
            },
            { "kind": "Content", "text": "<T[K]>;\n}> : never" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "Schema",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
              "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
            }
          ],
          "typeTokenRange": { "startIndex": 1, "endIndex": 31 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export type Schema<T> =\n   IsStringUnion <T> extends true\n    ? [T] extends [string]\n      ?  UnionToTuple <T> extends infer U\n        ? U extends string[]\n          ?  EnumType <U>\n          : never\n        : never\n      : never\n    :  IsUnion <T> extends true\n      ?  SchemaForUnion <T>\n      : T extends  Array <infer U>\n        ?  ArrayType < Schema <U>>\n        : T extends string\n          ? string extends T\n            ?  StringType \n            :  LiteralType <T>\n          : T extends number\n            ?  NumberType \n            : T extends boolean\n              ?  BooleanType \n              : T extends null\n                ?  NullType \n                : T extends object\n                  ?  ObjectType <{\n                      [K in keyof T]:  Schema <T[K]>;\n                    }>\n                  : never;",
          "overlayTokens": [
            { "kind": "Content", "text": "export type Schema<T> =\n  " },
            {
              "kind": "Reference",
              "text": " IsStringUnion",
              "canonicalReference": "@hashbrownai/core!ɵtypes.IsStringUnion:type"
            },
            {
              "kind": "Content",
              "text": " <T> extends true\n    ? [T] extends [string]\n      ? "
            },
            {
              "kind": "Reference",
              "text": " UnionToTuple",
              "canonicalReference": "@hashbrownai/core!ɵtypes.UnionToTuple:type"
            },
            {
              "kind": "Content",
              "text": " <T> extends infer U\n        ? U extends string[]\n          ? "
            },
            {
              "kind": "Reference",
              "text": " EnumType",
              "canonicalReference": "@hashbrownai/core!s.EnumType:interface"
            },
            {
              "kind": "Content",
              "text": " <U>\n          : never\n        : never\n      : never\n    : "
            },
            {
              "kind": "Reference",
              "text": " IsUnion",
              "canonicalReference": "@hashbrownai/core!ɵtypes.IsUnion:type"
            },
            { "kind": "Content", "text": " <T> extends true\n      ? " },
            {
              "kind": "Reference",
              "text": " SchemaForUnion",
              "canonicalReference": "@hashbrownai/core!~SchemaForUnion:type"
            },
            { "kind": "Content", "text": " <T>\n      : T extends " },
            {
              "kind": "Reference",
              "text": " Array",
              "canonicalReference": "!Array:interface"
            },
            { "kind": "Content", "text": " <infer U>\n        ? " },
            {
              "kind": "Reference",
              "text": " ArrayType",
              "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " Schema",
              "canonicalReference": "@hashbrownai/core!s.Schema:type"
            },
            {
              "kind": "Content",
              "text": " <U>>\n        : T extends string\n          ? string extends T\n            ? "
            },
            {
              "kind": "Reference",
              "text": " StringType ",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": "\n            : " },
            {
              "kind": "Reference",
              "text": " LiteralType",
              "canonicalReference": "@hashbrownai/core!s.LiteralType:interface"
            },
            {
              "kind": "Content",
              "text": " <T>\n          : T extends number\n            ? "
            },
            {
              "kind": "Reference",
              "text": " NumberType ",
              "canonicalReference": "@hashbrownai/core!s.NumberType:interface"
            },
            {
              "kind": "Content",
              "text": "\n            : T extends boolean\n              ? "
            },
            {
              "kind": "Reference",
              "text": " BooleanType ",
              "canonicalReference": "@hashbrownai/core!s.BooleanType:interface"
            },
            {
              "kind": "Content",
              "text": "\n              : T extends null\n                ? "
            },
            {
              "kind": "Reference",
              "text": " NullType ",
              "canonicalReference": "@hashbrownai/core!s.NullType:interface"
            },
            {
              "kind": "Content",
              "text": "\n                : T extends object\n                  ? "
            },
            {
              "kind": "Reference",
              "text": " ObjectType",
              "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
            },
            {
              "kind": "Content",
              "text": " <{\n                      [K in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": " Schema",
              "canonicalReference": "@hashbrownai/core!s.Schema:type"
            },
            {
              "kind": "Content",
              "text": " <T[K]>;\n                    }>\n                  : never;"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@hashbrownai/core!s.streaming:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "../packages/core/src/schema/public_api.ts",
          "releaseTag": "None",
          "name": "streaming",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@hashbrownai/core!s.streaming.array:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function array<Item extends "
                },
                {
                  "kind": "Reference",
                  "text": "HashbrownType",
                  "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
                },
                { "kind": "Content", "text": ">(description: " },
                { "kind": "Content", "text": "string" },
                { "kind": "Content", "text": ", item: " },
                { "kind": "Content", "text": "Item" },
                { "kind": "Content", "text": "): " },
                {
                  "kind": "Reference",
                  "text": "ArrayType",
                  "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
                },
                { "kind": "Content", "text": "<Item>" },
                { "kind": "Content", "text": ";" }
              ],
              "fileUrlPath": "../packages/core/src/schema/streaming.ts",
              "returnTypeTokenRange": { "startIndex": 7, "endIndex": 9 },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
                  "isOptional": false
                },
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": { "startIndex": 5, "endIndex": 6 },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Item",
                  "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
                  "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
                }
              ],
              "name": "array",
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "export declare function array<\n  Item extends  HashbrownType ,\n>(description: string, item: Item):  ArrayType <Item>;",
              "overlayTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function array<\n  Item extends "
                },
                {
                  "kind": "Reference",
                  "text": " HashbrownType ",
                  "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
                },
                {
                  "kind": "Content",
                  "text": ",\n>(description: string, item: Item): "
                },
                {
                  "kind": "Reference",
                  "text": " ArrayType",
                  "canonicalReference": "@hashbrownai/core!s.ArrayType:interface"
                },
                { "kind": "Content", "text": " <Item>;" }
              ]
            },
            {
              "kind": "Function",
              "canonicalReference": "@hashbrownai/core!s.streaming.object:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function object<Shape extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                { "kind": "Content", "text": "<string, any>" },
                { "kind": "Content", "text": ">(description: " },
                { "kind": "Content", "text": "string" },
                { "kind": "Content", "text": ", shape: " },
                { "kind": "Content", "text": "Shape" },
                { "kind": "Content", "text": "): " },
                {
                  "kind": "Reference",
                  "text": "ObjectType",
                  "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
                },
                { "kind": "Content", "text": "<" },
                {
                  "kind": "Reference",
                  "text": "CleanInterfaceShape",
                  "canonicalReference": "@hashbrownai/core!ɵtypes.CleanInterfaceShape:type"
                },
                { "kind": "Content", "text": "<Shape>>" },
                { "kind": "Content", "text": ";" }
              ],
              "fileUrlPath": "../packages/core/src/schema/streaming.ts",
              "returnTypeTokenRange": { "startIndex": 8, "endIndex": 12 },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": { "startIndex": 4, "endIndex": 5 },
                  "isOptional": false
                },
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": { "startIndex": 6, "endIndex": 7 },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Shape",
                  "constraintTokenRange": { "startIndex": 1, "endIndex": 3 },
                  "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
                }
              ],
              "name": "object",
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "export declare function object<\n  Shape extends  Record <string, any>,\n>(\n  description: string,\n  shape: Shape,\n):  ObjectType <\n   CleanInterfaceShape <Shape>\n>;",
              "overlayTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function object<\n  Shape extends "
                },
                {
                  "kind": "Reference",
                  "text": " Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": " <string, any>,\n>(\n  description: string,\n  shape: Shape,\n): "
                },
                {
                  "kind": "Reference",
                  "text": " ObjectType",
                  "canonicalReference": "@hashbrownai/core!s.ObjectType:interface"
                },
                { "kind": "Content", "text": " <\n  " },
                {
                  "kind": "Reference",
                  "text": " CleanInterfaceShape",
                  "canonicalReference": "@hashbrownai/core!ɵtypes.CleanInterfaceShape:type"
                },
                { "kind": "Content", "text": " <Shape>\n>;" }
              ]
            },
            {
              "kind": "Function",
              "canonicalReference": "@hashbrownai/core!s.streaming.string:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function string(description: "
                },
                { "kind": "Content", "text": "string" },
                { "kind": "Content", "text": "): " },
                {
                  "kind": "Reference",
                  "text": "StringType",
                  "canonicalReference": "@hashbrownai/core!s.StringType:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "fileUrlPath": "../packages/core/src/schema/streaming.ts",
              "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
                  "isOptional": false
                }
              ],
              "name": "string",
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "export declare function string(\n  description: string,\n):  StringType; ",
              "overlayTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function string(\n  description: string,\n): "
                },
                {
                  "kind": "Reference",
                  "text": " StringType; ",
                  "canonicalReference": "@hashbrownai/core!s.StringType:interface"
                }
              ]
            }
          ],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "",
          "overlayTokens": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.string:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function string(description: "
            },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": "): " },
            {
              "kind": "Reference",
              "text": "StringType",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "description",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "string",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function string(\n  description: string,\n):  StringType; ",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function string(\n  description: string,\n): "
            },
            {
              "kind": "Reference",
              "text": " StringType; ",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@hashbrownai/core!s.StringType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StringType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<string>" },
            { "kind": "Content", "text": " " }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "releaseTag": "Public",
          "name": "StringType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@hashbrownai/core!s.StringType#\"~schema\":member",
              "docComment": "",
              "excerptTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "StringTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~StringTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"~schema\"",
              "propertyTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
              "docs": {
                "modifiers": {
                  "isInternal": false,
                  "isPublic": false,
                  "isAlpha": false,
                  "isBeta": false,
                  "isOverride": false,
                  "isExperimental": false
                },
                "summary": "",
                "usageNotes": "",
                "remarks": "",
                "deprecated": "",
                "returns": "",
                "see": [],
                "params": [],
                "examples": []
              },
              "formattedContent": "[internal]: StringTypeInternals;",
              "overlayTokens": [
                { "kind": "Content", "text": "[" },
                {
                  "kind": "Reference",
                  "text": "internal",
                  "canonicalReference": "@hashbrownai/core!~internal:var"
                },
                { "kind": "Content", "text": "]: " },
                {
                  "kind": "Reference",
                  "text": "StringTypeInternals",
                  "canonicalReference": "@hashbrownai/core!~StringTypeInternals:interface"
                },
                { "kind": "Content", "text": ";" }
              ]
            }
          ],
          "extendsTokenRanges": [{ "startIndex": 1, "endIndex": 3 }],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export interface StringType extends HashbrownType<string>",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export interface StringType extends "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "<string>" }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@hashbrownai/core!s.StringType:var",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "StringType: " },
            {
              "kind": "Reference",
              "text": "HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "StringType",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": ">" }
          ],
          "fileUrlPath": "../packages/core/src/schema/base.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "StringType",
          "variableTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "StringType:  HashbrownTypeCtor < StringType >;",
          "overlayTokens": [
            { "kind": "Content", "text": "StringType: " },
            {
              "kind": "Reference",
              "text": " HashbrownTypeCtor",
              "canonicalReference": "@hashbrownai/core!~HashbrownTypeCtor:interface"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " StringType ",
              "canonicalReference": "@hashbrownai/core!s.StringType:interface"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@hashbrownai/core!s.toJsonSchema:function(1)",
          "docComment": "/**\n * Walks the HashbrownType graph, finds any sub-schemas seen more than once (excluding the root), assigns each a unique name, and emits a draft-07 JSON Schema with a $defs section. Cycles always become $refs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toJsonSchema(schema: "
            },
            {
              "kind": "Reference",
              "text": "HashbrownType",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "any" },
            { "kind": "Content", "text": ";" }
          ],
          "fileUrlPath": "../packages/core/src/schema/to-json-schema.ts",
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "schema",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "toJsonSchema",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Walks the HashbrownType graph, finds any sub-schemas seen more than once (excluding the root), assigns each a unique name, and emits a draft-07 JSON Schema with a $defs section. Cycles always become $refs.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "export declare function toJsonSchema(\n  schema:  HashbrownType ,\n): any;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "export declare function toJsonSchema(\n  schema: "
            },
            {
              "kind": "Reference",
              "text": " HashbrownType ",
              "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
            },
            { "kind": "Content", "text": ",\n): any;" }
          ]
        }
      ],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [],
        "examples": []
      },
      "formattedContent": "",
      "overlayTokens": []
    }
  ]
}
