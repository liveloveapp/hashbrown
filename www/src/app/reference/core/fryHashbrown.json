{
  "name": "fryHashbrown",
  "canonicalReference": "@hashbrownai/core!fryHashbrown:function",
  "kind": "Function",
  "fileUrlPath": "../packages/core/src/hashbrown.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/core!fryHashbrown:function(1)",
      "docComment": "/**\n * Initialize a Hashbrown chat instance with the given configuration.\n *\n * @param init - Initialization options containing: - `debugName`: Optional debug name for devtools tracing - `apiUrl`: Base URL of the Hashbrown API endpoint - `model`: The LLM model identifier to use - `system`: System prompt or initial context for the chat - `messages`: Initial message history - `tools`: Array of tools to enable in the instance - `responseSchema`: JSON schema for validating structured output - `middleware`: Middleware functions to run on messages - `emulateStructuredOutput`: Whether to emulate structured output behavior - `debounce`: Debounce interval in milliseconds for sending messages\n *\n * @typeParam Output - The type of messages expected from the LLM.\n *\n * @typeParam Tools - The set of tools to register with the chat instance.\n *\n * @returns A configured Hashbrown instance.\n *\n * @throws\n *\n * If a reserved tool name (\"output\") is used.\n *\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function fryHashbrown<Tools extends "
        },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "@hashbrownai/core!~Chat_2.AnyTool:type"
        },
        { "kind": "Content", "text": ">(init: " },
        {
          "kind": "Content",
          "text": "{\n    debugName?: string;\n    apiUrl: string;\n    model: "
        },
        {
          "kind": "Reference",
          "text": "KnownModelIds",
          "canonicalReference": "@hashbrownai/core!KnownModelIds:type"
        },
        {
          "kind": "Content",
          "text": ";\n    system: string;\n    messages?: "
        },
        {
          "kind": "Reference",
          "text": "Chat.Message",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Message_3:type"
        },
        {
          "kind": "Content",
          "text": "<string, Tools>[];\n    tools?: Tools[];\n    middleware?: "
        },
        {
          "kind": "Reference",
          "text": "Chat.Middleware",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Middleware:type"
        },
        {
          "kind": "Content",
          "text": "[];\n    emulateStructuredOutput?: boolean;\n    debounce?: number;\n    retries?: number;\n}"
        },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "Hashbrown",
          "canonicalReference": "@hashbrownai/core!Hashbrown:interface"
        },
        { "kind": "Content", "text": "<string, Tools>" },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../packages/core/src/hashbrown.ts",
      "returnTypeTokenRange": { "startIndex": 11, "endIndex": 13 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "init",
          "parameterTypeTokenRange": { "startIndex": 3, "endIndex": 10 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "Tools",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "fryHashbrown",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Initialize a Hashbrown chat instance with the given configuration.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " A configured Hashbrown instance.\n\n",
        "see": [],
        "params": [
          {
            "name": "init",
            "description": "Initialization options containing: - `debugName`: Optional debug name for devtools tracing - `apiUrl`: Base URL of the Hashbrown API endpoint - `model`: The LLM model identifier to use - `system`: System prompt or initial context for the chat - `messages`: Initial message history - `tools`: Array of tools to enable in the instance - `responseSchema`: JSON schema for validating structured output - `middleware`: Middleware functions to run on messages - `emulateStructuredOutput`: Whether to emulate structured output behavior - `debounce`: Debounce interval in milliseconds for sending messages\n\n"
          }
        ],
        "examples": []
      },
      "formattedContent": "export declare function fryHashbrown<\n  Tools extends  Chat.AnyTool ,\n>(init: {\n  debugName?: string;\n  apiUrl: string;\n  model:  KnownModelIds ;\n  system: string;\n  messages?:  Chat.Message <string, Tools>[];\n  tools?: Tools[];\n  middleware?:  Chat.Middleware [];\n  emulateStructuredOutput?: boolean;\n  debounce?: number;\n  retries?: number;\n}):  Hashbrown <string, Tools>;",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "export declare function fryHashbrown<\n  Tools extends "
        },
        {
          "kind": "Reference",
          "text": " Chat.AnyTool ",
          "canonicalReference": "@hashbrownai/core!~Chat_2.AnyTool:type"
        },
        {
          "kind": "Content",
          "text": ",\n>(init: {\n  debugName?: string;\n  apiUrl: string;\n  model: "
        },
        {
          "kind": "Reference",
          "text": " KnownModelIds ",
          "canonicalReference": "@hashbrownai/core!KnownModelIds:type"
        },
        { "kind": "Content", "text": ";\n  system: string;\n  messages?: " },
        {
          "kind": "Reference",
          "text": " Chat.Message",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Message_3:type"
        },
        {
          "kind": "Content",
          "text": " <string, Tools>[];\n  tools?: Tools[];\n  middleware?: "
        },
        {
          "kind": "Reference",
          "text": " Chat.Middleware ",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Middleware:type"
        },
        {
          "kind": "Content",
          "text": "[];\n  emulateStructuredOutput?: boolean;\n  debounce?: number;\n  retries?: number;\n}): "
        },
        {
          "kind": "Reference",
          "text": " Hashbrown",
          "canonicalReference": "@hashbrownai/core!Hashbrown:interface"
        },
        { "kind": "Content", "text": " <string, Tools>;" }
      ]
    },
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/core!fryHashbrown:function(2)",
      "docComment": "/**\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function fryHashbrown<Schema extends "
        },
        {
          "kind": "Reference",
          "text": "s.HashbrownType",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        { "kind": "Content", "text": ", Tools extends " },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "@hashbrownai/core!~Chat_2.AnyTool:type"
        },
        { "kind": "Content", "text": ", Output extends " },
        {
          "kind": "Reference",
          "text": "s.Infer",
          "canonicalReference": "@hashbrownai/core!s.Infer:type"
        },
        { "kind": "Content", "text": "<Schema>" },
        { "kind": "Content", "text": " = " },
        {
          "kind": "Reference",
          "text": "s.Infer",
          "canonicalReference": "@hashbrownai/core!s.Infer:type"
        },
        { "kind": "Content", "text": "<Schema>" },
        { "kind": "Content", "text": ">(init: " },
        {
          "kind": "Content",
          "text": "{\n    debugName?: string;\n    apiUrl: string;\n    model: "
        },
        {
          "kind": "Reference",
          "text": "KnownModelIds",
          "canonicalReference": "@hashbrownai/core!KnownModelIds:type"
        },
        {
          "kind": "Content",
          "text": ";\n    system: string;\n    messages?: "
        },
        {
          "kind": "Reference",
          "text": "Chat.Message",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Message_3:type"
        },
        {
          "kind": "Content",
          "text": "<Output, Tools>[];\n    tools?: Tools[];\n    responseSchema: Schema;\n    middleware?: "
        },
        {
          "kind": "Reference",
          "text": "Chat.Middleware",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Middleware:type"
        },
        {
          "kind": "Content",
          "text": "[];\n    emulateStructuredOutput?: boolean;\n    debounce?: number;\n    retries?: number;\n}"
        },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "Hashbrown",
          "canonicalReference": "@hashbrownai/core!Hashbrown:interface"
        },
        { "kind": "Content", "text": "<Output, Tools>" },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../packages/core/src/hashbrown.ts",
      "returnTypeTokenRange": { "startIndex": 19, "endIndex": 21 },
      "releaseTag": "Public",
      "overloadIndex": 2,
      "parameters": [
        {
          "parameterName": "init",
          "parameterTypeTokenRange": { "startIndex": 11, "endIndex": 18 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "Schema",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Tools",
          "constraintTokenRange": { "startIndex": 3, "endIndex": 4 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Output",
          "constraintTokenRange": { "startIndex": 5, "endIndex": 7 },
          "defaultTypeTokenRange": { "startIndex": 8, "endIndex": 10 }
        }
      ],
      "name": "fryHashbrown",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [],
        "examples": []
      },
      "formattedContent": "export declare function fryHashbrown<\n  Schema extends  s.HashbrownType ,\n  Tools extends  Chat.AnyTool ,\n  Output extends\n     s.Infer <Schema> =  s.Infer <Schema>,\n>(init: {\n  debugName?: string;\n  apiUrl: string;\n  model:  KnownModelIds ;\n  system: string;\n  messages?:  Chat.Message <Output, Tools>[];\n  tools?: Tools[];\n  responseSchema: Schema;\n  middleware?:  Chat.Middleware [];\n  emulateStructuredOutput?: boolean;\n  debounce?: number;\n  retries?: number;\n}):  Hashbrown <Output, Tools>;",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "export declare function fryHashbrown<\n  Schema extends "
        },
        {
          "kind": "Reference",
          "text": " s.HashbrownType ",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        { "kind": "Content", "text": ",\n  Tools extends " },
        {
          "kind": "Reference",
          "text": " Chat.AnyTool ",
          "canonicalReference": "@hashbrownai/core!~Chat_2.AnyTool:type"
        },
        { "kind": "Content", "text": ",\n  Output extends\n    " },
        {
          "kind": "Reference",
          "text": " s.Infer",
          "canonicalReference": "@hashbrownai/core!s.Infer:type"
        },
        { "kind": "Content", "text": " <Schema> = " },
        {
          "kind": "Reference",
          "text": " s.Infer",
          "canonicalReference": "@hashbrownai/core!s.Infer:type"
        },
        {
          "kind": "Content",
          "text": " <Schema>,\n>(init: {\n  debugName?: string;\n  apiUrl: string;\n  model: "
        },
        {
          "kind": "Reference",
          "text": " KnownModelIds ",
          "canonicalReference": "@hashbrownai/core!KnownModelIds:type"
        },
        { "kind": "Content", "text": ";\n  system: string;\n  messages?: " },
        {
          "kind": "Reference",
          "text": " Chat.Message",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Message_3:type"
        },
        {
          "kind": "Content",
          "text": " <Output, Tools>[];\n  tools?: Tools[];\n  responseSchema: Schema;\n  middleware?: "
        },
        {
          "kind": "Reference",
          "text": " Chat.Middleware ",
          "canonicalReference": "@hashbrownai/core!~Chat_2.Middleware:type"
        },
        {
          "kind": "Content",
          "text": "[];\n  emulateStructuredOutput?: boolean;\n  debounce?: number;\n  retries?: number;\n}): "
        },
        {
          "kind": "Reference",
          "text": " Hashbrown",
          "canonicalReference": "@hashbrownai/core!Hashbrown:interface"
        },
        { "kind": "Content", "text": " <Output, Tools>;" }
      ]
    }
  ]
}
