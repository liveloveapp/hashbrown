{
  "name": "StateSignal",
  "canonicalReference": "@hashbrownai/core!StateSignal:interface",
  "kind": "Interface",
  "fileUrlPath": "../packages/core/src/utils/micro-ngrx.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Interface",
      "canonicalReference": "@hashbrownai/core!StateSignal:interface",
      "docComment": "/**\n * @public\n */\n",
      "excerptTokens": [
        { "kind": "Content", "text": "export interface StateSignal<State> " }
      ],
      "fileUrlPath": "../packages/core/src/utils/micro-ngrx.ts",
      "releaseTag": "Public",
      "typeParameters": [
        {
          "typeParameterName": "State",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "StateSignal",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "CallSignature",
          "canonicalReference": "@hashbrownai/core!StateSignal:call(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "(): " },
            { "kind": "Content", "text": "State" },
            { "kind": "Content", "text": ";" }
          ],
          "returnTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "(): State;",
          "overlayTokens": [{ "kind": "Content", "text": "(): State;" }]
        },
        {
          "kind": "MethodSignature",
          "canonicalReference": "@hashbrownai/core!StateSignal#subscribe:member(1)",
          "docComment": "",
          "excerptTokens": [
            { "kind": "Content", "text": "subscribe(onChange: " },
            { "kind": "Content", "text": "(value: State) => void" },
            { "kind": "Content", "text": "): " },
            { "kind": "Content", "text": "() => void" },
            { "kind": "Content", "text": ";" }
          ],
          "isOptional": false,
          "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "onChange",
              "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
              "isOptional": false
            }
          ],
          "name": "subscribe",
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "subscribe(onChange: (value: State) => void): () => void;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "subscribe(onChange: (value: State) => void): () => void;"
            }
          ]
        }
      ],
      "extendsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [],
        "examples": []
      },
      "formattedContent": "export interface StateSignal<State>",
      "overlayTokens": [
        { "kind": "Content", "text": "export interface StateSignal<State>" }
      ]
    }
  ]
}
