{
  "name": "encodeFrame",
  "canonicalReference": "@hashbrownai/core!encodeFrame:function",
  "kind": "Function",
  "fileUrlPath": "../packages/core/src/frames/encode-frame.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/core!encodeFrame:function(1)",
      "docComment": "/**\n * Encodes a frame into a binary format.\n *\n * @param frame - The frame to encode.\n *\n * @returns The encoded frame.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function encodeFrame(frame: "
        },
        {
          "kind": "Reference",
          "text": "Frame",
          "canonicalReference": "@hashbrownai/core!Frame:type"
        },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "Uint8Array",
          "canonicalReference": "!Uint8Array:interface"
        },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../packages/core/src/frames/encode-frame.ts",
      "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "frame",
          "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isOptional": false
        }
      ],
      "name": "encodeFrame",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Encodes a frame into a binary format.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " The encoded frame.\n",
        "see": [],
        "params": [
          { "name": "frame", "description": "The frame to encode.\n\n" }
        ],
        "examples": []
      },
      "formattedContent": "export declare function encodeFrame(\n  frame:  Frame ,\n):  Uint8Array; ",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "export declare function encodeFrame(\n  frame: "
        },
        {
          "kind": "Reference",
          "text": " Frame ",
          "canonicalReference": "@hashbrownai/core!Frame:type"
        },
        { "kind": "Content", "text": ",\n): " },
        {
          "kind": "Reference",
          "text": " Uint8Array; ",
          "canonicalReference": "!Uint8Array:interface"
        }
      ]
    }
  ]
}
