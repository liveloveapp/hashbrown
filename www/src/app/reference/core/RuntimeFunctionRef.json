{
  "name": "RuntimeFunctionRef",
  "canonicalReference": "@hashbrownai/core!RuntimeFunctionRef:type",
  "kind": "TypeAlias",
  "fileUrlPath": "../packages/core/src/runtime/create-runtime-function-impl.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "TypeAlias",
      "canonicalReference": "@hashbrownai/core!RuntimeFunctionRef:type",
      "docComment": "/**\n * A reference to a function in the runtime.\n *\n * @param Args - The args of the function.\n *\n * @param Result - The result of the function.\n *\n * @returns The function reference.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export type RuntimeFunctionRef<Args, Result> = "
        },
        {
          "kind": "Content",
          "text": "{\n    name: string;\n    description: string;\n    args?: "
        },
        {
          "kind": "Reference",
          "text": "s.HashbrownType",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        { "kind": "Content", "text": ";\n    result?: " },
        {
          "kind": "Reference",
          "text": "s.HashbrownType",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        {
          "kind": "Content",
          "text": ";\n    handler: (args: Args, abortSignal: "
        },
        {
          "kind": "Reference",
          "text": "AbortSignal",
          "canonicalReference": "!AbortSignal:interface"
        },
        { "kind": "Content", "text": ") => Result | " },
        {
          "kind": "Reference",
          "text": "Promise",
          "canonicalReference": "!Promise:interface"
        },
        { "kind": "Content", "text": "<Result>;\n}" },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../packages/core/src/runtime/create-runtime-function-impl.ts",
      "releaseTag": "Public",
      "name": "RuntimeFunctionRef",
      "typeParameters": [
        {
          "typeParameterName": "Args",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Result",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "typeTokenRange": { "startIndex": 1, "endIndex": 10 },
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "A reference to a function in the runtime.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " The function reference.\n",
        "see": [],
        "params": [
          { "name": "Args", "description": "The args of the function.\n\n" },
          { "name": "Result", "description": "The result of the function.\n\n" }
        ],
        "examples": []
      },
      "formattedContent": "export type RuntimeFunctionRef<Args, Result> = {\n  name: string;\n  description: string;\n  args?:  s.HashbrownType ;\n  result?:  s.HashbrownType ;\n  handler: (\n    args: Args,\n    abortSignal:  AbortSignal ,\n  ) => Result |  Promise <Result>;\n};",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "export type RuntimeFunctionRef<Args, Result> = {\n  name: string;\n  description: string;\n  args?: "
        },
        {
          "kind": "Reference",
          "text": " s.HashbrownType ",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        { "kind": "Content", "text": ";\n  result?: " },
        {
          "kind": "Reference",
          "text": " s.HashbrownType ",
          "canonicalReference": "@hashbrownai/core!s.HashbrownType:interface"
        },
        {
          "kind": "Content",
          "text": ";\n  handler: (\n    args: Args,\n    abortSignal: "
        },
        {
          "kind": "Reference",
          "text": " AbortSignal ",
          "canonicalReference": "!AbortSignal:interface"
        },
        { "kind": "Content", "text": ",\n  ) => Result | " },
        {
          "kind": "Reference",
          "text": " Promise",
          "canonicalReference": "!Promise:interface"
        },
        { "kind": "Content", "text": " <Result>;\n};" }
      ]
    }
  ]
}
