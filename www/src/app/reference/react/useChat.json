{
  "name": "useChat",
  "canonicalReference": "@hashbrownai/react!useChat:function",
  "kind": "Function",
  "fileUrlPath": "../dist/packages/react/hooks/use-chat.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/react!useChat:function(1)",
      "docComment": "/**\n * Custom React hook to manage chat interactions within a HashbrownProvider context. This hook provides functionalities to send messages, handle tool calls, and manage chat status.\n *\n * @param options - Configuration options for the chat.\n *\n * @returns {UseChatResult} An object containing chat state and functions to interact with the chat.\n *\n * @example\n * ```tsx\n * const MyChatComponent = () => {\n *   const { messages, sendMessage, status } = useChat({\n *     model: 'gpt-4o',\n *     messages: [\n *       {\n *         role: 'system',\n *         content: 'You are a helpful assistant.',\n *       },\n *     ],\n *     tools: [],\n *   });\n *\n *   const handleSendMessage = () => {\n *     sendMessage({ role: 'user', content: 'Hello, how are you?' });\n *   };\n *\n *   return (\n *     <div>\n *       <button onClick={handleSendMessage}>Send Message</button>\n *       <div>Status: {status}</div>\n *       <ul>\n *         {messages.map((msg, index) => (\n *           <li key={index}>{msg.content}</li>\n *         ))}\n *       </ul>\n *     </div>\n *   );\n * };\n * ```\n *\n */\n",
      "excerptTokens": [
        { "kind": "Content", "text": "useChat: (options: " },
        {
          "kind": "Reference",
          "text": "UseChatOptions",
          "canonicalReference": "@hashbrownai/react!UseChatOptions:interface"
        },
        { "kind": "Content", "text": ") => " },
        {
          "kind": "Reference",
          "text": "UseChatResult",
          "canonicalReference": "@hashbrownai/react!UseChatResult:interface"
        }
      ],
      "fileUrlPath": "../dist/packages/react/hooks/use-chat.d.ts",
      "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "options",
          "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isOptional": false
        }
      ],
      "name": "useChat",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Custom React hook to manage chat interactions within a HashbrownProvider context. This hook provides functionalities to send messages, handle tool calls, and manage chat status.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " {UseChatResult} An object containing chat state and functions to interact with the chat.\n\n",
        "see": [],
        "params": [
          {
            "name": "options",
            "description": "Configuration options for the chat.\n\n"
          }
        ]
      }
    }
  ]
}
