{
  "name": "HashbrownProvider",
  "canonicalReference": "@hashbrownai/react!HashbrownProvider:function",
  "kind": "Function",
  "fileUrlPath": "../dist/packages/react/src/hashbrown-provider.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/react!HashbrownProvider:function(1)",
      "docComment": "/**\n * The context for the Hashbrown provider. This is used to store the URL and middleware for contacting the Hashbrown endpoint.\n *\n * @example\n * ```ts\n * <HashbrownProvider url=\"https://your.api.local/chat\">\n *   <App />\n * </HashbrownProvider>\n * ```\n *\n * @public\n */\n",
      "excerptTokens": [
        { "kind": "Content", "text": "HashbrownProvider: (\nprops: " },
        {
          "kind": "Reference",
          "text": "HashbrownProviderOptions",
          "canonicalReference": "@hashbrownai/react!HashbrownProviderOptions:interface"
        },
        { "kind": "Content", "text": " & {\n    children: " },
        {
          "kind": "Reference",
          "text": "React.ReactNode",
          "canonicalReference": "@types/react!React.ReactNode:type"
        },
        { "kind": "Content", "text": ";\n}" },
        { "kind": "Content", "text": ") => " },
        { "kind": "Content", "text": "import(\"react/jsx-runtime\")." },
        {
          "kind": "Reference",
          "text": "JSX.Element",
          "canonicalReference": "@types/react!JSX.Element:interface"
        }
      ],
      "fileUrlPath": "../dist/packages/react/src/hashbrown-provider.d.ts",
      "returnTypeTokenRange": { "startIndex": 6, "endIndex": 8 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "props",
          "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 5 },
          "isOptional": false
        }
      ],
      "name": "HashbrownProvider",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "The context for the Hashbrown provider. This is used to store the URL and middleware for contacting the Hashbrown endpoint.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [],
        "examples": [
          "\n```ts\n<HashbrownProvider url=\"https://your.api.local/chat\">\n  <App />\n</HashbrownProvider>\n```\n\n\n"
        ]
      },
      "formattedContent": "HashbrownProvider: (\n  props:  HashbrownProviderOptions  & {\n    children:  React.ReactNode ;\n  },\n) => import(\"react/jsx-runtime\"). JSX.Element; ",
      "overlayTokens": [
        { "kind": "Content", "text": "HashbrownProvider: (\n  props: " },
        {
          "kind": "Reference",
          "text": " HashbrownProviderOptions ",
          "canonicalReference": "@hashbrownai/react!HashbrownProviderOptions:interface"
        },
        { "kind": "Content", "text": " & {\n    children: " },
        {
          "kind": "Reference",
          "text": " React.ReactNode ",
          "canonicalReference": "@types/react!React.ReactNode:type"
        },
        {
          "kind": "Content",
          "text": ";\n  },\n) => import(\"react/jsx-runtime\")."
        },
        {
          "kind": "Reference",
          "text": " JSX.Element; ",
          "canonicalReference": "@types/react!JSX.Element:interface"
        }
      ]
    }
  ]
}
