{
  "name": "UseStructuredChatResult",
  "canonicalReference": "@hashbrownai/react!UseStructuredChatResult:interface",
  "kind": "Interface",
  "fileUrlPath": "../dist/packages/react/src/hooks/use-structured-chat.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Interface",
      "canonicalReference": "@hashbrownai/react!UseStructuredChatResult:interface",
      "docComment": "/**\n * The result object-type returned by the `useStructuredChat` hook that provides functions and state for interacting with the chat.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export interface UseStructuredChatResult<Output, Tools extends "
        },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "!Chat.AnyTool:type"
        },
        { "kind": "Content", "text": "> " }
      ],
      "fileUrlPath": "../dist/packages/react/src/hooks/use-structured-chat.d.ts",
      "releaseTag": "Public",
      "typeParameters": [
        {
          "typeParameterName": "Output",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Tools",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "UseStructuredChatResult",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#error:member",
          "docComment": "/**\n * The error encountered during chat operations, if any.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "error: " },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            { "kind": "Content", "text": " | undefined" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "error",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The error encountered during chat operations, if any.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "error:  Error  | undefined;",
          "overlayTokens": [
            { "kind": "Content", "text": "error: " },
            {
              "kind": "Reference",
              "text": " Error ",
              "canonicalReference": "!Error:interface"
            },
            { "kind": "Content", "text": " | undefined;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#exhaustedRetries:member",
          "docComment": "/**\n * Whether the current request has exhausted retries.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "exhaustedRetries: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "exhaustedRetries",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Whether the current request has exhausted retries.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "exhaustedRetries: boolean;",
          "overlayTokens": [
            { "kind": "Content", "text": "exhaustedRetries: boolean;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#isReceiving:member",
          "docComment": "/**\n * Whether the chat is receiving a response.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "isReceiving: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "isReceiving",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Whether the chat is receiving a response.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "isReceiving: boolean;",
          "overlayTokens": [
            { "kind": "Content", "text": "isReceiving: boolean;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#isRunningToolCalls:member",
          "docComment": "/**\n * Whether the chat is running tool calls.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "isRunningToolCalls: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "isRunningToolCalls",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Whether the chat is running tool calls.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "isRunningToolCalls: boolean;",
          "overlayTokens": [
            { "kind": "Content", "text": "isRunningToolCalls: boolean;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#isSending:member",
          "docComment": "/**\n * Whether the chat is sending a response.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "isSending: " },
            { "kind": "Content", "text": "boolean" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "isSending",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Whether the chat is sending a response.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "isSending: boolean;",
          "overlayTokens": [
            { "kind": "Content", "text": "isSending: boolean;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#lastAssistantMessage:member",
          "docComment": "/**\n * The last assistant message.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "lastAssistantMessage: " },
            {
              "kind": "Reference",
              "text": "Chat.AssistantMessage",
              "canonicalReference": "!Chat.AssistantMessage:type"
            },
            { "kind": "Content", "text": "<Output, Tools> | undefined" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "lastAssistantMessage",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The last assistant message.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "lastAssistantMessage:  Chat.AssistantMessage <\n  Output,\n  Tools\n> | undefined;",
          "overlayTokens": [
            { "kind": "Content", "text": "lastAssistantMessage: " },
            {
              "kind": "Reference",
              "text": " Chat.AssistantMessage",
              "canonicalReference": "!Chat.AssistantMessage:type"
            },
            {
              "kind": "Content",
              "text": " <\n  Output,\n  Tools\n> | undefined;"
            }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#messages:member",
          "docComment": "/**\n * An array of chat messages.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "messages: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": "<Output, Tools>[]" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "messages",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 3 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "An array of chat messages.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "messages:  (Chat.Message  < Output, Tools > []);",
          "overlayTokens": [
            { "kind": "Content", "text": "messages: " },
            {
              "kind": "Reference",
              "text": " (Chat.Message ",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": " < Output, Tools > []);" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#reload:member",
          "docComment": "/**\n * Reload the chat, useful for retrying when an error occurs.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "reload: " },
            { "kind": "Content", "text": "() => void" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "reload",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Reload the chat, useful for retrying when an error occurs.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "reload: () => void;",
          "overlayTokens": [
            { "kind": "Content", "text": "reload: () => void;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#resendMessages:member",
          "docComment": "/**\n * Function to cause current messages to be resent. Can be used after an error in chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "resendMessages: " },
            { "kind": "Content", "text": "() => void" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "resendMessages",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Function to cause current messages to be resent. Can be used after an error in chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "resendMessages: () => void;",
          "overlayTokens": [
            { "kind": "Content", "text": "resendMessages: () => void;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#sendMessage:member",
          "docComment": "/**\n * Function to send a new chat message.\n *\n * @param message - The chat message to send.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "sendMessage: " },
            { "kind": "Content", "text": "(message: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": "<Output, Tools>) => void" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "sendMessage",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 4 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Function to send a new chat message.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "message",
                "description": "The chat message to send.\n"
              }
            ],
            "examples": []
          },
          "formattedContent": "sendMessage: (message: Chat.Message<Output, Tools>) => void;",
          "overlayTokens": [
            { "kind": "Content", "text": "sendMessage: (message: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": "<Output, Tools>) => void;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#setMessages:member",
          "docComment": "/**\n * Function to update the chat messages.\n *\n * @param messages - The new array of chat messages.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "setMessages: " },
            { "kind": "Content", "text": "(messages: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": "<Output, Tools>[]) => void" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "setMessages",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 4 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Function to update the chat messages.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [
              {
                "name": "messages",
                "description": "The new array of chat messages.\n"
              }
            ],
            "examples": []
          },
          "formattedContent": "setMessages: (messages: Chat.Message<Output, Tools>[]) => void;",
          "overlayTokens": [
            { "kind": "Content", "text": "setMessages: (messages: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "!Chat.Message:type"
            },
            { "kind": "Content", "text": "<Output, Tools>[]) => void;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult#stop:member",
          "docComment": "/**\n * Function to stop the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "stop: " },
            {
              "kind": "Content",
              "text": "(clearStreamingMessage?: boolean) => void"
            },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "stop",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "Function to stop the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "stop: (clearStreamingMessage?: boolean) => void;",
          "overlayTokens": [
            {
              "kind": "Content",
              "text": "stop: (clearStreamingMessage?: boolean) => void;"
            }
          ]
        }
      ],
      "extendsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "The result object-type returned by the `useStructuredChat` hook that provides functions and state for interacting with the chat.\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [],
        "examples": []
      },
      "formattedContent": "export interface UseStructuredChatResult<Output, Tools extends Chat.AnyTool>",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "export interface UseStructuredChatResult<Output, Tools extends "
        },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "!Chat.AnyTool:type"
        },
        { "kind": "Content", "text": ">" }
      ]
    }
  ]
}
