{
  "name": "useStructuredChat",
  "canonicalReference": "@hashbrownai/react!useStructuredChat:function",
  "kind": "Function",
  "fileUrlPath": "../dist/packages/react/hooks/use-structured-chat.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/react!useStructuredChat:function(1)",
      "docComment": "/**\n * Custom React hook to manage chat interactions within a HashbrownProvider context. This hook provides functionalities to send messages, handle tool calls, and manage chat status.\n *\n * @param options - Configuration options for the chat.\n *\n * @returns {UseStructuredChatResult} An object containing chat state and functions to interact with the chat.\n *\n * @example\n * ```tsx\n * const MyChatComponent = () => {\n *   const { messages, sendMessage, status } = useStructuredChat({\n *     model: 'gpt-4o',\n *     system: 'You are a helpful assistant.',\n *     schema: s.object('Person', {\n *       name: s.string('Name of the person'),\n *       age: s.number('Age of the person'),\n *     }),\n *     tools: [],\n *   });\n *\n *   const handleSendMessage = () => {\n *     sendMessage({ role: 'user', content: 'Hello, how are you?' });\n *   };\n *\n *   return (\n *     <div>\n *       <button onClick={handleSendMessage}>Send Message</button>\n *       <div>Status: {status}</div>\n *       <ul>\n *         {messages.map((msg, index) => (\n *           <li key={index}>{msg.content}</li>\n *         ))}\n *       </ul>\n *     </div>\n *   );\n * };\n * ```\n *\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "export declare function useStructuredChat<Schema extends "
        },
        {
          "kind": "Reference",
          "text": "s.HashbrownType",
          "canonicalReference": "!s.HashbrownType:type"
        },
        { "kind": "Content", "text": ", Tools extends " },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "!Chat.AnyTool:type"
        },
        { "kind": "Content", "text": ", Output extends " },
        {
          "kind": "Reference",
          "text": "s.Infer",
          "canonicalReference": "!s.Infer:type"
        },
        { "kind": "Content", "text": "<Schema>" },
        { "kind": "Content", "text": " = " },
        {
          "kind": "Reference",
          "text": "s.Infer",
          "canonicalReference": "!s.Infer:type"
        },
        { "kind": "Content", "text": "<Schema>" },
        { "kind": "Content", "text": ">(options: " },
        {
          "kind": "Reference",
          "text": "UseStructuredChatOptions",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatOptions:interface"
        },
        { "kind": "Content", "text": "<Schema, Tools, Output>" },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "UseStructuredChatResult",
          "canonicalReference": "@hashbrownai/react!UseStructuredChatResult:interface"
        },
        { "kind": "Content", "text": "<Output, Tools>" },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../dist/packages/react/hooks/use-structured-chat.d.ts",
      "returnTypeTokenRange": { "startIndex": 14, "endIndex": 16 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "options",
          "parameterTypeTokenRange": { "startIndex": 11, "endIndex": 13 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "Schema",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Tools",
          "constraintTokenRange": { "startIndex": 3, "endIndex": 4 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        },
        {
          "typeParameterName": "Output",
          "constraintTokenRange": { "startIndex": 5, "endIndex": 7 },
          "defaultTypeTokenRange": { "startIndex": 8, "endIndex": 10 }
        }
      ],
      "name": "useStructuredChat",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Custom React hook to manage chat interactions within a HashbrownProvider context. This hook provides functionalities to send messages, handle tool calls, and manage chat status.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " {UseStructuredChatResult} An object containing chat state and functions to interact with the chat.\n\n",
        "see": [],
        "params": [
          {
            "name": "options",
            "description": "Configuration options for the chat.\n\n"
          }
        ]
      }
    }
  ]
}
