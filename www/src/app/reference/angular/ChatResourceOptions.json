{
  "name": "ChatResourceOptions",
  "canonicalReference": "@hashbrownai/angular!ChatResourceOptions:interface",
  "kind": "Interface",
  "fileUrlPath": "../dist/packages/angular/index.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Interface",
      "canonicalReference": "@hashbrownai/angular!ChatResourceOptions:interface",
      "docComment": "/**\n * Configuration options for the chat resource.\n *\n * @param system - The system (assistant) prompt.\n *\n * @param model - The model identifier to use for the chat.\n *\n * @param tools - Optional array of bound tools available to the chat.\n *\n * @param messages - Optional initial list of chat messages.\n *\n * @param debounce - Optional debounce interval in milliseconds between user inputs.\n *\n * @param debugName - Optional name used for debugging in logs.\n *\n * @param apiUrl - Optional override for the API base URL.\n *\n * @typeParam Tools - The set of tool definitions available to the chat.\n *\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "interface ChatResourceOptions<Tools extends "
        },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "@hashbrownai/angular!~AnyTool:type"
        },
        { "kind": "Content", "text": "> " }
      ],
      "fileUrlPath": "../dist/packages/angular/index.d.ts",
      "releaseTag": "Public",
      "typeParameters": [
        {
          "typeParameterName": "Tools",
          "constraintTokenRange": { "startIndex": 1, "endIndex": 2 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "ChatResourceOptions",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#apiUrl:member",
          "docComment": "/**\n * The API URL to use for the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "apiUrl?: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": true,
          "releaseTag": "Public",
          "name": "apiUrl",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The API URL to use for the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "apiUrl?: string;",
          "overlayTokens": [{ "kind": "Content", "text": "apiUrl?: string;" }]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#debounce:member",
          "docComment": "/**\n * The debounce time for the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "debounce?: " },
            { "kind": "Content", "text": "number" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": true,
          "releaseTag": "Public",
          "name": "debounce",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The debounce time for the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "debounce?: number;",
          "overlayTokens": [{ "kind": "Content", "text": "debounce?: number;" }]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#debugName:member",
          "docComment": "/**\n * The debug name for the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "debugName?: " },
            { "kind": "Content", "text": "string" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": true,
          "releaseTag": "Public",
          "name": "debugName",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The debug name for the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "debugName?: string;",
          "overlayTokens": [
            { "kind": "Content", "text": "debugName?: string;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#messages:member",
          "docComment": "/**\n * The initial messages for the chat.\n *\n * @typeParam Tools - The set of tool definitions available to the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "messages?: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "@hashbrownai/angular!~Message_3:type"
            },
            { "kind": "Content", "text": "<string, Tools>[] | " },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "@hashbrownai/angular!~Message_3:type"
            },
            { "kind": "Content", "text": "<string, Tools>[]>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": true,
          "releaseTag": "Public",
          "name": "messages",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 7 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The initial messages for the chat.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "messages?: Chat.Message<string, Tools>[] | Signal<Chat.Message<string, Tools>[]>;",
          "overlayTokens": [
            { "kind": "Content", "text": "messages?: " },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "@hashbrownai/angular!~Message_3:type"
            },
            { "kind": "Content", "text": "<string, Tools>[] | " },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "Chat.Message",
              "canonicalReference": "@hashbrownai/angular!~Message_3:type"
            },
            { "kind": "Content", "text": "<string, Tools>[]>;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#model:member",
          "docComment": "/**\n * The model to use for the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "model: " },
            {
              "kind": "Reference",
              "text": "KnownModelIds",
              "canonicalReference": "@hashbrownai/angular!~KnownModelIds:type"
            },
            { "kind": "Content", "text": " | " },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": "<" },
            {
              "kind": "Reference",
              "text": "KnownModelIds",
              "canonicalReference": "@hashbrownai/angular!~KnownModelIds:type"
            },
            { "kind": "Content", "text": ">" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "model",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 7 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The model to use for the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "model:  KnownModelIds  |\n   Signal < KnownModelIds >;",
          "overlayTokens": [
            { "kind": "Content", "text": "model: " },
            {
              "kind": "Reference",
              "text": " KnownModelIds ",
              "canonicalReference": "@hashbrownai/angular!~KnownModelIds:type"
            },
            { "kind": "Content", "text": " |\n  " },
            {
              "kind": "Reference",
              "text": " Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": " <" },
            {
              "kind": "Reference",
              "text": " KnownModelIds ",
              "canonicalReference": "@hashbrownai/angular!~KnownModelIds:type"
            },
            { "kind": "Content", "text": ">;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#system:member",
          "docComment": "/**\n * The system prompt to use for the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "system: " },
            { "kind": "Content", "text": "string | " },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": "<string>" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": false,
          "releaseTag": "Public",
          "name": "system",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 4 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The system prompt to use for the chat.\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "system: string |  Signal <string>;",
          "overlayTokens": [
            { "kind": "Content", "text": "system: string | " },
            {
              "kind": "Reference",
              "text": " Signal",
              "canonicalReference": "@angular/core!Signal:type"
            },
            { "kind": "Content", "text": " <string>;" }
          ]
        },
        {
          "kind": "PropertySignature",
          "canonicalReference": "@hashbrownai/angular!ChatResourceOptions#tools:member",
          "docComment": "/**\n * The tools to use for the chat.\n *\n * @typeParam Tools - The set of tool definitions available to the chat.\n */\n",
          "excerptTokens": [
            { "kind": "Content", "text": "tools?: " },
            { "kind": "Content", "text": "Tools[]" },
            { "kind": "Content", "text": ";" }
          ],
          "isReadonly": false,
          "isOptional": true,
          "releaseTag": "Public",
          "name": "tools",
          "propertyTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "docs": {
            "modifiers": {
              "isInternal": false,
              "isPublic": false,
              "isAlpha": false,
              "isBeta": false,
              "isOverride": false,
              "isExperimental": false
            },
            "summary": "The tools to use for the chat.\n\n",
            "usageNotes": "",
            "remarks": "",
            "deprecated": "",
            "returns": "",
            "see": [],
            "params": [],
            "examples": []
          },
          "formattedContent": "tools?: Tools[];",
          "overlayTokens": [{ "kind": "Content", "text": "tools?: Tools[];" }]
        }
      ],
      "extendsTokenRanges": [],
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Configuration options for the chat resource.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": "",
        "see": [],
        "params": [
          {
            "name": "system",
            "description": "The system (assistant) prompt.\n\n"
          },
          {
            "name": "model",
            "description": "The model identifier to use for the chat.\n\n"
          },
          {
            "name": "tools",
            "description": "Optional array of bound tools available to the chat.\n\n"
          },
          {
            "name": "messages",
            "description": "Optional initial list of chat messages.\n\n"
          },
          {
            "name": "debounce",
            "description": "Optional debounce interval in milliseconds between user inputs.\n\n"
          },
          {
            "name": "debugName",
            "description": "Optional name used for debugging in logs.\n\n"
          },
          {
            "name": "apiUrl",
            "description": "Optional override for the API base URL.\n\n"
          }
        ],
        "examples": []
      },
      "formattedContent": "interface ChatResourceOptions<Tools extends Chat.AnyTool>",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "interface ChatResourceOptions<Tools extends "
        },
        {
          "kind": "Reference",
          "text": "Chat.AnyTool",
          "canonicalReference": "@hashbrownai/angular!~AnyTool:type"
        },
        { "kind": "Content", "text": ">" }
      ]
    }
  ]
}
