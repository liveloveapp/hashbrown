{
  "name": "provideHashbrown",
  "canonicalReference": "@hashbrownai/angular!provideHashbrown:function",
  "kind": "Function",
  "fileUrlPath": "../dist/packages/angular/index.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/angular!provideHashbrown:function(1)",
      "docComment": "/**\n * Provides the Hashbrown configuration.\n *\n * @argument options - The Hashbrown configuration.\n *\n * @returns The Hashbrown configuration.\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "declare function provideHashbrown(options: "
        },
        {
          "kind": "Reference",
          "text": "ProvideHashbrownOptions",
          "canonicalReference": "@hashbrownai/angular!ProvideHashbrownOptions:interface"
        },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "Provider",
          "canonicalReference": "@angular/core!Provider:type"
        },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../dist/packages/angular/index.d.ts",
      "returnTypeTokenRange": { "startIndex": 3, "endIndex": 4 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "options",
          "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isOptional": false
        }
      ],
      "name": "provideHashbrown",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": false,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Provides the Hashbrown configuration.\n\n@argument options - The Hashbrown configuration.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " The Hashbrown configuration.\n",
        "see": [],
        "params": [],
        "examples": []
      }
    }
  ]
}
