{
  "name": "createToolJavaScript",
  "canonicalReference": "@hashbrownai/angular!createToolJavaScript:function",
  "kind": "Function",
  "fileUrlPath": "../dist/packages/angular/index.d.ts",
  "isDeprecated": false,
  "members": [
    {
      "kind": "Function",
      "canonicalReference": "@hashbrownai/angular!createToolJavaScript:function(1)",
      "docComment": "/**\n * Creates a tool that allows the LLM to run JavaScript code. It is run in a stateful JavaScript environment, with no access to the internet, the DOM, or any function that you have not explicitly defined.\n *\n * @param options - The options for creating the tool.\n *\n * @returns The tool.\n *\n * @public\n */\n",
      "excerptTokens": [
        {
          "kind": "Content",
          "text": "declare function createToolJavaScript<Result>({ runtime, }: "
        },
        {
          "kind": "Reference",
          "text": "CreateToolJavaScriptOptions",
          "canonicalReference": "@hashbrownai/angular!CreateToolJavaScriptOptions:interface"
        },
        { "kind": "Content", "text": "): " },
        {
          "kind": "Reference",
          "text": "Chat.Tool",
          "canonicalReference": "@hashbrownai/angular!~Tool_3:type"
        },
        { "kind": "Content", "text": "<'javascript', " },
        {
          "kind": "Reference",
          "text": "s.Infer",
          "canonicalReference": "@hashbrownai/angular!~Infer:type"
        },
        { "kind": "Content", "text": "<typeof " },
        {
          "kind": "Reference",
          "text": "schema",
          "canonicalReference": "@hashbrownai/angular!~schema:var"
        },
        { "kind": "Content", "text": ">, Result>" },
        { "kind": "Content", "text": ";" }
      ],
      "fileUrlPath": "../dist/packages/angular/index.d.ts",
      "returnTypeTokenRange": { "startIndex": 3, "endIndex": 9 },
      "releaseTag": "Public",
      "overloadIndex": 1,
      "parameters": [
        {
          "parameterName": "{ runtime, }",
          "parameterTypeTokenRange": { "startIndex": 1, "endIndex": 2 },
          "isOptional": false
        }
      ],
      "typeParameters": [
        {
          "typeParameterName": "Result",
          "constraintTokenRange": { "startIndex": 0, "endIndex": 0 },
          "defaultTypeTokenRange": { "startIndex": 0, "endIndex": 0 }
        }
      ],
      "name": "createToolJavaScript",
      "docs": {
        "modifiers": {
          "isInternal": false,
          "isPublic": true,
          "isAlpha": false,
          "isBeta": false,
          "isOverride": false,
          "isExperimental": false
        },
        "summary": "Creates a tool that allows the LLM to run JavaScript code. It is run in a stateful JavaScript environment, with no access to the internet, the DOM, or any function that you have not explicitly defined.\n\n",
        "usageNotes": "",
        "remarks": "",
        "deprecated": "",
        "returns": " The tool.\n\n\n",
        "see": [],
        "params": [
          {
            "name": "options",
            "description": "The options for creating the tool.\n\n"
          }
        ],
        "examples": []
      },
      "formattedContent": "declare function createToolJavaScript<Result>(\n  { runtime }:  CreateToolJavaScriptOptions ,\n):  Chat.Tool <\n  \"javascript\",\n   s.Infer <typeof  schema >,\n  Result\n>;",
      "overlayTokens": [
        {
          "kind": "Content",
          "text": "declare function createToolJavaScript<Result>(\n  { runtime }: "
        },
        {
          "kind": "Reference",
          "text": " CreateToolJavaScriptOptions ",
          "canonicalReference": "@hashbrownai/angular!CreateToolJavaScriptOptions:interface"
        },
        { "kind": "Content", "text": ",\n): " },
        {
          "kind": "Reference",
          "text": " Chat.Tool",
          "canonicalReference": "@hashbrownai/angular!~Tool_3:type"
        },
        { "kind": "Content", "text": " <\n  \"javascript\",\n  " },
        {
          "kind": "Reference",
          "text": " s.Infer",
          "canonicalReference": "@hashbrownai/angular!~Infer:type"
        },
        { "kind": "Content", "text": " <typeof " },
        {
          "kind": "Reference",
          "text": " schema ",
          "canonicalReference": "@hashbrownai/angular!~schema:var"
        },
        { "kind": "Content", "text": ">,\n  Result\n>;" }
      ]
    }
  ]
}
